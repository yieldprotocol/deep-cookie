{"url": "https://docs.code4rena.com/roles/wardens/submission-policy", "md_content": "[Code4rena](/)\n\nSearch\n\n\u2303K\n\n[Code4rena](/)\n\nSearch\n\n\u2303K\n\n[Code4rena](/)\n\nRoles\n\n[Wardens](/roles/wardens)\n\n[Submission policy](/roles/wardens/submission-policy)\n\n[Solo audits](/roles/wardens/solo-audits)\n\n[Authenticate with your wallet](/roles/wardens/warden-auth)\n\n[Tools and resources](/roles/wardens/tools-and-resources)\n\n[Sponsors](/roles/sponsors)\n\n[Judges](/roles/judges)\n\n[Certified contributors](/roles/certified-contributors)\n\nAwarding\n\n[Incentive model and awards](/awarding/incentive-model-and-awards)\n\n[Judging criteria](/awarding/judging-criteria)\n\n[Fairness and validity](/awarding/fairness-and-validity)\n\nPhilosophy\n\n[Security is about people](/philosophy/security-is-about-people)\n\n[The culture we're building](/philosophy/how-we-work)\n\n[Intentionally structured](/philosophy/intentionally-structured)\n\nOther Details\n\n[FAQ](/structure/frequently-asked-questions)\n\n[Audit timeline](/structure/our-process)\n\n[Where can I find\u2026?](/structure/where-can-i-find...)\n\n[Powered By\nGitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=-MYGYvqTD29_fAaod9NJ)\n\n# Submission policy\n\nCode4rena is an open organization committed to improving the security of\ndecentralized protocols while protecting the information of our sponsors and\nparticipants. This policy is intended to provide C4 Wardens (security\nresearchers) clear guidelines for participating in code audits while\nconducting vulnerability discovery activities.\n\nThe following policy conveys C4's preferences in how to submit discovered\nvulnerabilities to the organization and describes what systems and types of\nresearch are covered under this policy, how to share vulnerability reports,\nand the length of time we expect Wardens to wait prior to publicly disclosing\nvulnerabilities.\n\nReports can be submitted at any point prior to stop time for a given audit.\nThe details for each code audit can be found through [the Code4rena\nwebsite](https://code4rena.com/).\n\nAll community members agree to be bound by the Code4rena Code of Conduct,\nwhich can be viewed [in the Code4rena\nDiscord](https://discord.com/channels/810916927919620096/851883682470166558/851891396255940618).\n\n##\n\nAudit contest guidelines\n\nUnder this policy, audit contests covers activities in which you:\n\n  * Register as a C4 Warden within an individual capacity or as part of a team.\n\n  * Submit your bug report using the submission form.\n\n  * Make every effort to avoid privacy violations, degradation of user experience, disruption to production systems, and destruction or manipulation of data, especially in regard to funds.\n\n  * Only use exploits to the extent necessary to confirm a vulnerability's presence. Do not use an exploit to compromise funds, exfiltrate data, establish persistent permissioning access, or use the exploit to redirect to other systems.\n\n  * Unless explicitly noted by the affiliated sponsor, **wait until the audit report has been published** before you disclose it publicly.\n\n  * Do not submit a high volume of low-quality reports.\n\nIn the event that you encounter a critical vulnerability that the sponsor\nproject would want to know about, even before the end of the audit, please\nrefer to [\"How to submit Zero-day or otherwise highly sensitive\nbugs.\"](/roles/wardens/submission-policy#how-to-submit-zero-day-or-otherwise-\nhighly-sensitive-bugs)\u200b\n\n> Without explicit permission from sponsors, publishing or discussing findings\n> publicly prior to report publication is grounds for immediate forfeit of\n> award and disqualification from any future C4 events and activities.\n\n##\n\nSubmitting a report\n\nC4 accepts vulnerability reports via the audit submission form.\n\nIn order to help us triage and prioritize submissions, please ensure that your\nreports:\n\n  * Are submitted no later than the audit stop time.\n\n  * Use the audit submission process.\n\n  * Follow the correct report format. (See next section.)\n\n  * Describe the location the vulnerability was discovered and the potential impact of exploitation.\n\n  * Offer a detailed description of the steps needed to reproduce the vulnerability (proof of concept scripts or screenshots are helpful).\n\n  * Have not been surfaced as \"known issues\" (see audit repo `README` for details).\n\n  * Are written in English, if possible.\n\nIt is also recommended to ensure you receive email confirmation of each\nsubmission. (If you do not see an email confirmation, please check your spam\nfolder.)\n\n###\n\nReport format\n\n  * Medium or High severity findings should be submitted individually.\n\n  * All QA findings (Low risk or Non-critical) must be submitted as a single QA report per warden (or team).\n\n  * All Gas optimizations must be submitted as a single Gas report per warden (or team).\n\nWardens who submit multiple QA and/or Gas findings to a single audit without\nfollowing the required format will have all QA/Gas submissions invalidated for\nthat audit.\n\nFor more details on QA and Gas reports, and estimating risk, please see\n[Judging Criteria](https://docs.code4rena.com/roles/wardens/judging-\ncriteria#qa-reports-low-non-critical).\n\n###\n\nBurden of proof\n\nWardens have the burden of proof in submissions. Explaining and rationalizing\nthe potential impact is an essential part of a quality submission. The burden\nof proof increases based on the potential value of the submission (rarity,\nseverity).\n\nInsufficient proof shall be defined as the judge needing to do additional\nresearch or coding in order to validate the claims made in the submission.\nTherefore it is recommended to have a coded proof of concept for high severity\nfindings in order to make it easy for a judge to validate your case.\n\nSubmissions which judges deem insufficiently proven will not be eligible for\nanything higher than a satisfactory score.\n\n###\n\nHow to include a proof of concept\n\nTo include a proof of concept (PoC) link in your submission, please follow\nthese steps, to ensure that your PoC remains private for the duration of the\naudit, but can be accessed publicly after the findings are made public:\n\n  1. 1.\n\nModify existing test files\n\n  2. 2.\n\nProvide the diff\n([instructions](https://gist.github.com/IllIllI000/21deaa6a55c95a6ec9ca893009ee494f)),\nwhich can be applied\n\n###\n\nLate submissions\n\nC4 does not accept late submissions under any circumstances; the audit\ndeadlines are firm. We recommend that you submit your findings at least a few\nminutes before the cut-off time, since the submission form can become slow or\nunresponsive in the final minutes of an audit, due to high traffic.\n\n###\n\nSubmissions to the wrong audit\n\nC4 cannot \"transfer\" your submission to another audit after the audit ends. If\nyou discover that you have accidentally submitted a finding to the wrong\naudit, please re-submit it to the correct audit, and then follow the steps\nbelow to withdraw your report from the other audit.\n\n###\n\nHow to submit Zero-day or otherwise highly sensitive bugs\n\nIf you discover a highly sensitive bug, e.g. a high-severity vulnerability\naffecting deployed contracts, please follow these steps:\n\n  1. 1.\n\nSubmit a placeholder finding using the audit submission form, with a non-\nspecific title (e.g. \"Potentially sensitive issue - disclosed privately\")\n\n  2. 2.\n\nWhile logged in to the Code4rena website, [submit a Help Desk\nrequest](https://code4rena.com/help/), and select \"Sensitive disclosure\" for\n\"What type of problem do you need help with?\" Please include: a. Name of\naudit, and b. Link to a private Gist containing the finding.\n\nCode4rena staff will review the issue immediately with the judge and sponsor,\nand will ensure the submission is added to the audit repo after any immediate\nrisks have been addressed.\n\n###\n\nFindings in \"parent\" of forked projects\n\nIf an issue is discovered during an audit that relates to the \"parent\" of a\nforked project, wardens should disclose the finding to the parent project\nfirst, and submit a placeholder finding to the C4 audit. Guidelines:\n\n  *  **Do not** disclose the parent / third party name within the body of the finding issue.\n\n  *  **Do** include a hash of the issue\n\nIt is the warden's responsibility to follow up with Code4rena in a timely\nmanner, based on what they hear back from the original project.\n\n###\n\nUse of writing assistance software, ChatGPT output, etc\n\nAs a professional audit platform, Code4rena's bar for a satisfactory\nsubmission is that it is **as good as one might find in a professional audit\nreport.**\n\nUsing the output of ChatGPT, GPT-3, or automated tools for audit submissions\nis highly discouraged as it leads to a high ratio of nonsense submissions.\nWardens are responsible for verifying the validity and clarity of their own\nsubmissions. Sending multiple poor quality submissions in a single audit will\nresult in all of your audit submissions being ruled invalidated. Additional\npenalties may also be applied at the discretion of judges and C4 staff.\n\nWe are aware this privileges native English speakers as online translation\nservices can result in unclear wordings; therefore, a submission should not be\nmarked as unsatisfactory purely based on grammar and spelling which does not\ninterfere with a judge's ability to understand the submission.\n\nJudges must make the best decision they can regarding quality and\nunderstandability of findings.\n\n###\n\nAutomated findings considered known issues\n\n  * At the start of each audit, Code4rena runs a [Bot Race](https://www.code4rena.com/register/bot) where wardens compete to see whose AI-driven bot can create the highest quality and most thorough audit report.\n\n  * The winning report is shared with all C4 wardens within 24 hours of the audit start time, both in the audit repo and in the audit's Discord channel.\n\n  * All findings in the winning Bot Report will be declared publicly known issues, and therefore ineligible for awards.\n\nWardens may use automated tools as a first pass, and build on these findings\nto identify High and Medium severity issues (\"HM issues\"). However,\nsubmissions based on automated tools will have a higher burden of proof for\ndemonstrating to sponsors a relevant HM exploit path in order to be considered\nsatisfactory.\n\n##\n\nEditing a report\n\nTo edit a submitted finding in an open audit:\n\n  1. 1.\n\nSign into https://code4rena.com with your wallet.\n\n  2. 2.\n\nFind the audit on the C4 Audit page and click \"view competition\"\n\n  3. 3.\n\nClick on the \"Findings\" tab. There you will see a list of all your submissions\nfor that audit (both individual and team findings).\n\n  4. 4.\n\nSelect a finding from the list, make your edits and re-submit.\n\nFindings can be edited until the audit deadline.\n\n##\n\nWithdrawing a report\n\nIt is possible that a warden might want to withdraw a report after submitting\nit through the website. For example, if a new warden realizes they have not\nfollowed the report submission guidelines closely, or discover that a\nsubmission was outside the scope of the audit.\n\nIn this situation, wardens who wish to have a report withdrawn should:\n\n  1. 1.\n\nSign into https://code4rena.com with your wallet.\n\n  2. 2.\n\nFind the audit on the C4 Audit page and click \"view competition\n\n  3. 3.\n\nClick on the \"Findings\" tab. There you will see a list of all your submissions\nfor that audit (both individual and team findings).\n\n  4. 4.\n\nSelect a finding from the list, and choose the \"withdraw\" option.\n\nSubmissions must be withdrawn before the audit deadline.\n\n##\n\nUnauthorized test methods\n\nThe following methods are not authorized means of testing within C4 code\naudits:\n\n  * Testing exploits on mainnet.\n\n  * Network denial of service (DoS or DDoS) tests or other tests that impair access to or damage a system or data.\n\n  * Physical testing (e.g. office access, open doors, tailgating), social engineering (e.g. phishing, vishing), or any other non-technical vulnerability testing.\n\n##\n\nQuestions\n\nQuestions regarding this policy can be addressed in the `#questions` channel\non the [C4 Discord](https://discord.gg/Dr6p5KDCdG). We also invite you to\ncontact us with suggestions for improving this policy.\n\n##\n\nAuthorization\n\nIf you make a good faith effort to comply with this policy during your\nsecurity research, C4, its affiliates, and sponsors will consider your\nresearch to be authorized.\n\nThe C4 community will work with you to understand and resolve any issues\nquickly, and C4, its affiliates, and sponsors will not recommend or pursue\nlegal action related to your research.\n\nShould legal action be initiated by a third party against you for activities\nthat were conducted in accordance with this policy, C4 will make this\nauthorization known.\n\n[Roles - PreviousWardens](/roles/wardens)[NextSolo\naudits](/roles/wardens/solo-audits)\n\nLast modified 2mo ago\n\nOn this page\n\nAudit contest guidelines\n\nSubmitting a report\n\nReport format\n\nBurden of proof\n\nHow to include a proof of concept\n\nLate submissions\n\nSubmissions to the wrong audit\n\nHow to submit Zero-day or otherwise highly sensitive bugs\n\nFindings in \"parent\" of forked projects\n\nUse of writing assistance software, ChatGPT output, etc\n\nAutomated findings considered known issues\n\nEditing a report\n\nWithdrawing a report\n\nUnauthorized test methods\n\nQuestions\n\nAuthorization\n\n"}