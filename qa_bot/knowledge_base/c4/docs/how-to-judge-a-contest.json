{"url": "https://docs.code4rena.com/roles/judges/how-to-judge-a-contest", "md_content": "[Code4rena](/)\n\nSearch\n\n\u2303K\n\n[Code4rena](/)\n\nSearch\n\n\u2303K\n\n[Code4rena](/)\n\nRoles\n\n[Wardens](/roles/wardens)\n\n[Sponsors](/roles/sponsors)\n\n[Judges](/roles/judges)\n\n[How to judge an audit](/roles/judges/how-to-judge-a-contest)\n\n[Certified contributors](/roles/certified-contributors)\n\nAwarding\n\n[Incentive model and awards](/awarding/incentive-model-and-awards)\n\n[Judging criteria](/awarding/judging-criteria)\n\n[Fairness and validity](/awarding/fairness-and-validity)\n\nPhilosophy\n\n[Security is about people](/philosophy/security-is-about-people)\n\n[The culture we're building](/philosophy/how-we-work)\n\n[Intentionally structured](/philosophy/intentionally-structured)\n\nOther Details\n\n[FAQ](/structure/frequently-asked-questions)\n\n[Audit timeline](/structure/our-process)\n\n[Where can I find\u2026?](/structure/where-can-i-find...)\n\n[Powered By\nGitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=-MYGYvqTD29_fAaod9NJ)\n\n# How to judge an audit\n\n##\n\nTimeline\n\nIdeally we would like audits to be judged in 48 hours after handoff.\n\nWe ask that you try to complete the judging process quickly so that we can\ndistribute awards to wardens promptly. If you need more time, please\ncommunicate that to C4 as soon as possible.\n\n##\n\nHere's how the process works leading up to judging\n\nC4 kicks off the code competition and establishes a private repo to receive\nincoming issues. Typically, most findings come in on the last day of the\naudit. When the audit ends, a Lookout will presort the repo and then it will\nbe handed to the sponsor. Sponsors will have the chance to review the\nfindings, comment, and provide feedback on issues.\n\nSponsor input is non-binding, and do note that sponsors are heavily biased\nagainst having a report that includes very many vulnerabilities. Focus your\nwork as a judge on protecting users and providing feedback to wardens.\n\n##\n\nBefore you get started\n\nRead the [Judging Criteria](https://docs.code4rena.com/roles/wardens/judging-\ncriteria), [Submission Policy](/roles/wardens/submission-policy), and review\nthe audit readme as provided by the sponsor.\n\nYou may also be interested in browsing past audits, and [reviewing open issues\nin the Rulebook repo](https://github.com/code-423n4/rulebook/issues), in order\nto see how other judges have handled issues.\n\n##\n\nReviewing submissions\n\nWhen your judge application is approved, C4 staff will contact you to invite\nyou to our Github organization and provide you with technical documentation on\nour judging tools. Those documents also includes all information regarding de-\nduping, grading QA/Gas and other judging tasks.\n\n##\n\nNotes on judging\n\n  * Review the [Judging criteria](https://docs.code4rena.com/roles/wardens/judging-criteria).\n\n  * Consider the sponsor's feedback, but keep in mind that it's not always going to be objective.\n\n  * Any submissions that do not apply specifically to the functionality of the smart contract logic itself should be considered QA.\n\n  * When weighing in on severity or validity of an issue, leave a comment describing your justification for any changes you make to the warden's assessment of severity.\n\n  * When necessary, cross reference the submission with the codebase to validate the legitimacy of the proposed submission.\n\n  * Unless there is something uniquely novel created by combining vectors, most submissions regarding vulnerabilities that are inherent to a particular system or the Ethereum network as a whole should be considered QA. Examples of such vulnerabilities include front running, sandwich attacks, and MEV. In such events, leave a comment on the issue:\n\n> \"Sandwich attacks are inherent to AMMs, so this isn't a unique issue\n> presented by the MarginSwap implementation. With this in mind, I'm\n> downgrading the risk from a proposed medium severity to QA.\"\n\nOne important caveat to all of the above: **_unless otherwise specified by the\naudit sponsor or intended to be handled by the code_** **.** For example,\nflash loans are generally unavoidable, but since MarginSwap had a safeguard\nagainst them, we considered these findings relevant in their contest.\n\n##\n\nDiscussing issues with the sponsor\n\nUltimately the judge has the final word, but we want your decisions to be\nwell-informed. In a typical C4 audit, there will be a few issues that benefit\nfrom discussion with the sponsor; the judge may find that their understanding\nof the system is incomplete and you need to ask for clarification, or where\nthere is room for misunderstanding. Don't hesitate to connect directly with\nthe sponsor, either in the Github comments (where you can tag them in if\nneeded), or via Discord.\n\n##\n\nIf you have questions\n\nDo not hesitate to post in the #judges Discord channel, or DM a Contest\nAdministrator with questions as you're working on judging. Any questions or\nfeedback you can add to this documentation, or comments/questions on items\nabove are highly welcome and essential for us improving our process. Thank\nyou! \ud83d\ude4f\n\n##\n\nFinal step before handing off\n\nPlease add a comment to your top scoring QA report noting where there are any\nitems that you disagreed with the severity listed and/or any items that were\ninvalid. These comments will be integrated into the final report.\n\n##\n\nWhen you're done reviewing\n\nPing a C4 Contest Administrator and let us know you're ready to hand off the\nresults for post-judge QA and then award distribution.\n\n[Roles - PreviousJudges](/roles/judges)[Next \\- RolesCertified\ncontributors](/roles/certified-contributors)\n\nLast modified 2mo ago\n\nOn this page\n\nTimeline\n\nHere's how the process works leading up to judging\n\nBefore you get started\n\nReviewing submissions\n\nNotes on judging\n\nDiscussing issues with the sponsor\n\nIf you have questions\n\nFinal step before handing off\n\nWhen you're done reviewing\n\n"}